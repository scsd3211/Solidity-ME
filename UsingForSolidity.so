pragma solidity ^0.4.0
//this is the same code as  before ,just without comments

library Set{
	struct Data{ mapping(uint => bool) flags;}
	
	functions insert(Data storage self,uint value)
		returns (bool)
		{
			 if(self.flags[value])
			 {
					return false;
			 }
			 self.flags[value] = true;
			 return true;
		}

	function remove(Data storage self,uint value)
		returns (bool){
			
			if(!self.flags[value])
				return false;
			self.flags[value] = false;
			return true;
		}
	
	function contains(Data storage self,uint value)
		returns (bool)
		{
			return self.flags[value];
		}
	
}

contract C{
	using Set for Set.Data;
	Set.Data knownValues;
	
	function register(uint value)
	{
		if(!knownValues.insert(value))
			throw;
	}
}